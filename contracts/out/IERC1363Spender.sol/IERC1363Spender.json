{"abi":[{"type":"function","name":"onApprovalReceived","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onApprovalReceived(address,uint256,bytes)":"7b04a2d0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support `approveAndCall` from ERC-1363 token contracts.\",\"kind\":\"dev\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"details\":\"Whenever an ERC-1363 token `owner` approves this contract via `approveAndCall` to spend their tokens, this function is called. NOTE: To accept the approval, this must return `bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))` (i.e. 0x7b04a2d0, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"owner\":\"The address which called `approveAndCall` function and previously owned the tokens.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))` if approval is allowed unless throwing.\"}}},\"title\":\"IERC1363Spender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol\":\"IERC1363Spender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":abdk-libraries-solidity/=lib/abdk-libraries-solidity/\",\":chainlink/=lib/chainlink/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0xfc5656a93c34ce71887231f6546b52c625609def43276edab7c93c605d273de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42fcad5b83b8d3d732be151a9c5f43758d49f9e18a378621a9f422fa738fa122\",\"dweb:/ipfs/QmNTEMe5Tnuin4Cgsv5fRHkZq8B6SD4rH7AHZj7e8LVYSs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onApprovalReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"onApprovalReceived(address,uint256,bytes)":{"details":"Whenever an ERC-1363 token `owner` approves this contract via `approveAndCall` to spend their tokens, this function is called. NOTE: To accept the approval, this must return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` (i.e. 0x7b04a2d0, or its own function selector).","params":{"data":"Additional data with no specified format.","owner":"The address which called `approveAndCall` function and previously owned the tokens.","value":"The amount of tokens to be spent."},"returns":{"_0":"`bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` if approval is allowed unless throwing."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","abdk-libraries-solidity/=lib/abdk-libraries-solidity/","chainlink/=lib/chainlink/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol":"IERC1363Spender"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol":{"keccak256":"0xfc5656a93c34ce71887231f6546b52c625609def43276edab7c93c605d273de3","urls":["bzz-raw://42fcad5b83b8d3d732be151a9c5f43758d49f9e18a378621a9f422fa738fa122","dweb:/ipfs/QmNTEMe5Tnuin4Cgsv5fRHkZq8B6SD4rH7AHZj7e8LVYSs"],"license":"MIT"}},"version":1},"id":13}